openapi: 3.0.2
info:
  title: Rooster
  description: Rooster data
  version: '1.0'
        
paths:
  /Rooster/CreateTable:
    post:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Creeer database objecten
      parameters:
        - in: query
          name: FILLDATA
          description: Dummy records aanmaken
          required: true
          schema:
            type: boolean
      responses:
        201:
          description: "Aangemaakt, Tabel toegevoegd"
        500:
          description: "Data verwerkingsfout, bijv omdat de tabel al bestaat" 

  /Rooster/CreateViews:
    post:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Creeer database views
      responses:
        201:
          description: "Aangemaakt, View toegevoegd"
        500:
          description: "Data verwerkingsfout, view niet aangemaak"               
          
  /Rooster/GetObject:
    get:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: 'Haal een enkele dag op uit de database. Query parameters worden in AND conditie gebruikt'
      parameters:
        - in: query
          name: ID
          description: 'Database ID van het rooster record'
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: DATUM
          description: 'Datum van het rooster'
          required: false
          schema:
            type: string
            format: date
            example: "2017-07-21"
      responses:
        200:
          description: "OK, data succesvol opgehaald"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'
        404:
          description: "Data niet gevonden"
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"   
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"       

  /Rooster/GetObjects:
    get:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Haal een lijst met roosters op uit de database. Query parameters worden in AND conditie gebruikt
      parameters:
        - in: query
          name: ID
          description: Database ID van het aanwezig record
          required: false
          schema:
            type: integer
            format: int32
            example: 44   
        - in: query
          name: VERWIJDERD
          description: Toon welke records verwijderd zijn. Default = false
          required: false
          schema:
            type: boolean               
        - in: query
          name: LAATSTE_AANPASSING
          description: Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg
          required: false
          schema:
            type: boolean
        - in: query
          name: HASH
          description: HASH van laatste GetObjects aanroep. Indien bij nieuwe aanroep dezelfde data bevat, dan volgt http status code 304. In geval dataset niet hetzelfde is, dan komt de nieuwe dataset terug. Ook bedoeld om dataverbruik te vermindereren. Er wordt alleen data verzonden als het nodig is.
          required: false
          schema:
            type: string                
        - in: query
          name: SORT
          description: Sortering van de velden in ORDER BY formaat. Default = DATUM DESC
          required: false
          schema:
            type: string     
        - in: query
          name: MAX
          description: Maximum aantal records in de dataset. Gebruikt in LIMIT query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1  
        - in: query
          name: START
          description: Eerste record in de dataset. Gebruikt in LIMIT query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1  
        - in: query        
          name: VELDEN
          description: Welke velden moet opgenomen worden in de dataset
          required: false
          schema:
            type: string                                    
        - in: query        
          name: DATUM
          description: Zoek op datum
          required: false
          schema:
            type: string
            format: date    
        - in: query
          name: BEGIN_DATUM
          description: Begin datum (inclusief deze dag)
          required: false
          schema:
            type: string
            format: date   
        - in: query
          name: EIND_DATUM
          description: Eind datum (inclusief deze dag)
          required: false
          schema:
            type: string
            format: date                                    
                                   
      responses:
        200:
          description: "OK, data succesvol opgehaald"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view_rooster'
        304:
          description: "Data niet gemodificeerd, HASH in aanroep == hash in dataset"                     
        405:
          description: "Methode niet toegestaan, input validatie error"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"         

  /Rooster/DeleteObject:
    delete:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Markeer record als verwijderd. Query parameters worden in AND conditie gebruikt
      parameters:
        - in: query
          name: ID
          description: Database ID van het rooster record. Meerdere ID's in CSV formaat
          required: false
          schema:
            type: string
        - in: query
          name: DATUM
          description: Datum van het rooster
          required: false
          schema:
            type: string
            format: date
            example: "2017-07-21"
        - in: query
          name: VERIFICATIE
          description: Controleer of record bestaat voordat het verwijderd wordt. Default = true
          required: false
          schema:
            type: boolean            
      responses:
        204:
          description: "Rooster verwijderd"
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"  
        404:
          description: "Data niet gevonden"          
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"              
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)" 

  /Rooster/RestoreObject:
    patch:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Record dat verwijderd is terug halen. VERWIJDERD marker krijgt reset
      parameters:
        - in: query
          name: ID
          description: Database ID van het record. Meerdere ID's in CSV formaat
          required: true
          schema:
            type: string           
      responses:
        202:
          description: "Record(s) hersteld" 
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"  
        404:
          description: "Data niet gevonden"        
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"            
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)" 

  /Rooster/SaveObject:
    post:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Voeg nieuw rooster toe
      requestBody:
        description: Rooster data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oper_rooster_in'
      responses:
        200:
          description: "OK, data succesvol toegevoegd"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'  
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"           
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"       
        409:
          description: "Conflict, datum bestaat al"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"                       
    put:
      security:
        - basicAuth: [] 
        - bearerAuth: []     
      summary: Update bestaand rooster
      requestBody:
        description: Rooster data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oper_rooster_in'
      responses:
        200:
          description: "OK, data succesvol aangepast"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'  
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"  
        404:
          description: "Data niet gevonden"          
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"       
        409:
          description: "Conflict, datum bestaat al"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"         

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Eerst inloggen voordat API beschikbaar is
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT         

  schemas:
    oper_rooster_in:
      type: object
      properties:
        ID:
          description: Database ID van het rooster record
          type: integer
          format: int32
          example: 77
        DATUM:
          description: Datum van de vliegdag 
          type: string
          format: date
          example: "2017-07-21"
        DDWV:
          description: Is het een DDWV dag? 
          type: boolean
          example: 0
        CLUB_BEDRIJF:
          description: Is er een clubbedrijf 
          type: boolean
          example: 1
        WINTER_WERK:
          description: Wordt er gesleuteld aan vliegtuigen / rollend materieel
          type: boolean
          example: 0
        MIN_SLEEPSTART:
          description: Minimaal aantal aanmeldingen voordat we gaan slepen (alleen DDWV)
          type: integer
          format: int32
          example: 3     
        MIN_LIERSTART:
          description: Minimaal aantal aanmeldingen voordat we gaan lieren (alleen DDWV)
          type: integer
          format: int32
          example: 10      
        OPMERKINGEN:
          description: De opmerkingen die voor deze dag van toepassing zijn
          type: string
          maxLength: 255
          example: EH-R122 actief ivm oefening gyros


    oper_rooster:
      type: object
      allOf:
      - $ref: '#/components/schemas/oper_rooster_in' 
      - type: object
        properties:
          VERWIJDERD:
            description: Is dit record gemarkeerd als verwijderd?  
            type: boolean
            example: 0  
          LAATSTE_AANPASSING:
            description: Tijdstempel van laaste aanpassing in de database
            type: string
            format: date-time 
            example: "2020-04-17 07:29:01" 

    view_rooster_dataset:
      type: object
      allOf:
        - $ref: '#/components/schemas/oper_rooster'
 
    view_rooster:
      type: object
      properties:
        totaal:
          description: Aantal records dat voldoet aan de criteria in de database
          type: integer
          format: int32
          example: 287
        laatste_aanpassing:
          description: Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
          type: string
          format: date-time 
          example: "2020-07-022 16:39:25" 
        hash: 
          description: hash van de dataset
          type: string
          example: "4d00b3f"            
        dataset:
          description: De dataset met records
          type: array
          items: 
            type: object
            $ref: '#/components/schemas/view_rooster_dataset'
